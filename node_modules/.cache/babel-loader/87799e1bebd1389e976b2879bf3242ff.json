{"ast":null,"code":"import _slicedToArray from\"/Users/manaswiniaitha/Documents/github-repo/Portfolio2/portfolio-starter/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import{createContext,useReducer}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export var themecontext=/*#__PURE__*/createContext();var initialState={darkMode:true};var themeReducer=function themeReducer(state,action){switch(action.type){case'toggle':return{darkMode:!state.darkMode};default:return state;}};export var ThemeProvider=function ThemeProvider(props){var _useReducer=useReducer(themeReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];return/*#__PURE__*/_jsx(themecontext.Provider,{value:{state:state,dispatch:dispatch},children:props.children});};","map":{"version":3,"sources":["/Users/manaswiniaitha/Documents/github-repo/Portfolio2/portfolio-starter/src/Context.js"],"names":["React","createContext","useReducer","themecontext","initialState","darkMode","themeReducer","state","action","type","ThemeProvider","props","dispatch","children"],"mappings":"8JAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,aAAT,CAAuBC,UAAvB,KAAyC,OAAzC,C,2CAEA,MAAO,IAAMC,CAAAA,YAAY,cAAGF,aAAa,EAAlC,CAEP,GAAMG,CAAAA,YAAY,CAAG,CAACC,QAAQ,CAAC,IAAV,CAArB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,MAAR,CAAkB,CACnC,OAAOA,MAAM,CAACC,IAAd,EACI,IAAK,QAAL,CACI,MAAO,CAACJ,QAAQ,CAAC,CAACE,KAAK,CAACF,QAAjB,CAAP,CACJ,QACI,MAAOE,CAAAA,KAAP,CAJR,CAMH,CAPD,CASA,MAAO,IAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAU,CACnC,gBAA0BT,UAAU,CAACI,YAAD,CAAeF,YAAf,CAApC,4CAAOG,KAAP,iBAAcK,QAAd,iBACA,mBACI,KAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAACL,KAAK,CAALA,KAAD,CAAOK,QAAQ,CAARA,QAAP,CAA9B,UACKD,KAAK,CAACE,QADX,EADJ,CAKH,CAPM","sourcesContent":["import React from \"react\";\nimport { createContext,useReducer } from \"react\";\n\nexport const themecontext = createContext();\n\nconst initialState = {darkMode:true};\n\nconst themeReducer = (state, action) =>{\n    switch(action.type){\n        case 'toggle':\n            return {darkMode:!state.darkMode};\n        default:\n            return state;\n    }\n}\n\nexport const ThemeProvider = (props) =>{\n    const [state, dispatch] = useReducer(themeReducer, initialState)\n    return (\n        <themecontext.Provider value={{state,dispatch}}>\n            {props.children}\n        </themecontext.Provider>\n    );\n};"]},"metadata":{},"sourceType":"module"}